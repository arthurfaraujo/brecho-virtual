generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Usuario {
    codUsr            Int             @id @default(autoincrement())
    nome              String
    eMail             String          @unique
    senha             String
    telefone          String?
    uf                String?
    cidade            String?
    rua               String?
    numero            String?
    produtosCriados   Produto[]       @relation("cria")
    produtosComprados Produto[]       @relation("compra")
    deseja            DesejoUsuario[]
}

model Marca {
    codMar   Int       @id @default(autoincrement())
    nome     String    @unique
    produtos Produto[]
}

model Departamento {
    codDep         Int             @id @default(autoincrement())
    nome           String          @unique
    classificacoes Classificacao[]
}

model Categoria {
    codCat         Int             @id @default(autoincrement())
    nome           String          @unique
    classificacoes Classificacao[]
}

model SubCategoria {
    codSub         Int             @id @default(autoincrement())
    nome           String          @unique
    classificacoes Classificacao[]
}

model Classificacao {
    codCla   Int          @id @default(autoincrement())
    dep      Departamento @relation(fields: [codDep], references: [codDep])
    codDep   Int
    cat      Categoria    @relation(fields: [codCat], references: [codCat])
    codCat   Int
    sub      SubCategoria @relation(fields: [codSub], references: [codSub])
    codSub   Int
    produtos Produto[]
}

model Produto {
    codProd       Int             @id @default(autoincrement())
    nome          String
    descricao     String?
    estadoUso     String
    preco         Float
    criador       Usuario?        @relation("cria", fields: [codUsrCr], references: [codUsr])
    codUsrCr      Int?
    dataCriacao   DateTime        @default(now())
    comprador     Usuario?        @relation("compra", fields: [codUsrCp], references: [codUsr])
    codUsrCp      Int?
    dataCompra    DateTime?
    classificacao Classificacao   @relation(fields: [codCla], references: [codCla])
    codCla        Int
    marca         Marca?          @relation(fields: [codMar], references: [codMar])
    codMar        Int?
    desejadaPor   DesejoUsuario[]
    Imagens       FotoProduto[]
}

model DesejoUsuario {
    usuario Usuario @relation(fields: [codUsr], references: [codUsr], onDelete: Cascade)
    codUsr  Int
    Produto Produto @relation(fields: [codProd], references: [codProd], onDelete: Cascade)
    codProd Int

    @@id([codUsr, codProd])
}

model FotoProduto {
    Produto Produto @relation(fields: [codProd], references: [codProd], onDelete: Cascade)
    codProd Int
    urlImg  String

    @@id([codProd, urlImg])
}
